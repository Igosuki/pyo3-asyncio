var searchIndex = JSON.parse('{\
"pyo3_asyncio":{"doc":"","i":[[5,"try_init","pyo3_asyncio","Attempt to initialize the Python and Rust event loops",null,[[["python",3]],["pyresult",6]]],[5,"get_event_loop","","",null,[[],["pyobject",6]]],[5,"run_forever","","Run the event loop forever",null,[[["python",3]],["pyresult",6]]],[5,"run_until_complete","","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"close","","",null,[[["python",3]],["pyresult",6]]],[5,"spawn","","Spawn a Future onto the executor",null,[[],["joinhandle",3]]],[5,"spawn_blocking","","Spawn a blocking task onto the executor",null,[[],["joinhandle",3]]],[5,"into_future","","Convert a Python coroutine into a Rust Future",null,[[["pyany",3],["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine",null,[[["python",3]],[["pyobject",6],["pyresult",6]]]],[0,"test","","",null,null],[3,"Args","pyo3_asyncio::test","",null,null],[3,"Test","","",null,null],[12,"name","","",0,null],[12,"task","","",0,null],[5,"parse_args","","",null,[[],["args",3]]],[5,"test_harness","","",null,[[["args",3]]]],[11,"new_async","","",0,[[["string",3]]]],[11,"new_sync","","",0,[[["string",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",1,[[]]]],"p":[[3,"Test"],[3,"Args"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);