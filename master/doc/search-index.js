var searchIndex = JSON.parse('{\
"pyo3_asyncio":{"doc":"Rust Bindings to the Python Asyncio Event Loop","t":[0,3,5,3,12,12,11,5,5,0,0,5,23,23,5,5,5,0,0,5,0,3,3,3,3,23,23,5,5,5,5,5,5,5,5,5,0,8,10,8,16,16,10,8,10,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["testing","Args","parse_args","Test","name","test_fn","task","test_harness","main","async_std","re_exports","spawn_blocking","main","test","run_until_complete","into_coroutine","into_local_py_future","tokio","re_exports","pending","runtime","Runtime","Builder","EnterGuard","Handle","main","test","init","init_current_thread","get_runtime","init_multi_thread","init_multi_thread_once","init_current_thread_once","run_until_complete","into_coroutine","into_local_py_future","generic","JoinError","is_panic","Runtime","JoinError","JoinHandle","spawn","SpawnLocalExt","spawn_local","run_until_complete","into_coroutine","into_local_py_future","with_runtime","try_init","get_event_loop","run_forever","try_close","into_future","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","fmt","fmt","fmt","fmt","clone","clone","default","registry","new","handle","spawn","spawn_blocking","block_on","enter","shutdown_timeout","shutdown_background","new_current_thread","new_multi_thread","enable_all","worker_threads","max_blocking_threads","thread_name","thread_name_fn","thread_stack_size","on_thread_start","on_thread_stop","build","thread_keep_alive","enable_io","enable_time","enter","current","try_current","spawn","spawn_blocking","block_on"],"q":["pyo3_asyncio","pyo3_asyncio::testing","","","","","","","","pyo3_asyncio","pyo3_asyncio::async_std","pyo3_asyncio::async_std::re_exports","pyo3_asyncio::async_std","","","","","pyo3_asyncio","pyo3_asyncio::tokio","pyo3_asyncio::tokio::re_exports","","pyo3_asyncio::tokio::re_exports::runtime","","","","pyo3_asyncio::tokio","","","","","","","","","","","pyo3_asyncio","pyo3_asyncio::generic","","","","","","","","","","","pyo3_asyncio","","","","","","pyo3_asyncio::testing","","","","","","","","","","","","","","","","pyo3_asyncio::tokio::re_exports::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pyo3_asyncio::testing","","","pyo3_asyncio::tokio::re_exports::runtime","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["testing Utilities for writing PyO3 Asyncio tests","Args that should be provided to the test program","Parse the test args from the command line","The structure used by the <code>#[test]</code> macros to provide a …","The fully qualified name of the test","The function used to create the task that runs the test.","Create the task that runs the test","Run a sequence of tests while applying any necessary …","Parses test arguments and passes the tests to the …","async-std-runtime PyO3 Asyncio functions specific to the …","attributes re-exports for macros","re-export spawn_blocking for use in <code>#[test]</code> macro without …","attributes Provides the boilerplate for the <code>async-std</code> …","attributes testing Registers an <code>async-std</code> test with the …","Run the event loop until the given Future completes","Convert a Rust Future into a Python coroutine","Convert a <code>!Send</code> Rust Future into a Python coroutine","tokio-runtime PyO3 Asyncio functions specific to the …","attributes re-exports for macros","re-export pending to be used in tokio macros without …","re-export tokio::runtime to build runtimes in tokio …","The Tokio runtime.","Builds Tokio Runtime with custom configuration values.","Runtime context guard.","Handle to the runtime.","attributes","attributes testing Registers a <code>tokio</code> test with the …","Initialize the Tokio Runtime with a custom build","Initialize the Tokio Runtime with current-thread scheduler","Get a reference to the current tokio runtime","Initialize the Tokio Runtime with the multi-thread …","Ensure that the Tokio Runtime is initialized","Ensure that the Tokio Runtime is initialized","Run the event loop until the given Future completes","Convert a Rust Future into a Python coroutine","Convert a <code>!Send</code> Rust Future into a Python coroutine","Generic implementations of PyO3 Asyncio utilities that …","Generic utilities for a JoinError","Check if the spawned task exited because of a panic","Generic Rust async/await runtime","The error returned by a JoinHandle after being awaited","A future that completes with the result of the spawned …","Spawn a future onto this runtime’s event loop","Extension trait for async/await runtimes that support …","Spawn a !Send future onto this runtime’s event loop","Run the event loop until the given Future completes","Convert a Rust Future into a Python coroutine with a …","Convert a <code>!Send</code> Rust Future into a Python coroutine with …","Wraps the provided function with the initialization and …","Attempt to initialize the Python and Rust event loops","Get a reference to the Python Event Loop from Rust","Run the event loop forever","Shutdown the event loops and perform any necessary cleanup","Convert a Python <code>awaitable</code> into a Rust Future","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new runtime instance with default configuration …","Return a handle to the runtime’s spawner.","Spawn a future onto the Tokio runtime.","Run the provided function on an executor dedicated to …","Run a future to completion on the Tokio runtime. This is …","Enter the runtime context.","Shutdown the runtime, waiting for at most <code>duration</code> for …","Shutdown the runtime, without waiting for any spawned …","Returns a new builder with the current thread scheduler …","Returns a new builder with the multi thread scheduler …","Enables both I/O and time drivers.","Sets the number of worker threads the <code>Runtime</code> will use.","Specifies the limit for additional threads spawned by the …","Sets name of threads spawned by the <code>Runtime</code>’s thread …","Sets a function used to generate the name of threads …","Sets the stack size (in bytes) for worker threads.","Executes function <code>f</code> after each thread is started but …","Executes function <code>f</code> before each thread stops.","Creates the configured <code>Runtime</code>.","Sets a custom timeout for a thread in the blocking pool.","Enables the I/O driver.","Enables the time driver.","Enter the runtime context. This allows you to construct …","Returns a <code>Handle</code> view over the currently running <code>Runtime</code>","Returns a Handle view over the currently running Runtime","Spawn a future onto the Tokio runtime.","Run the provided function on an executor dedicated to …","Run a future to completion on this <code>Handle</code>’s associated …"],"i":[0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,3,3,3,0,4,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,6,6,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,6,9,7,8,9,1,5,1,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,9,9,9,9,9],"f":[null,null,[[],["args",3]],null,null,null,[[],[["box",3],["pin",3]]],[[["vec",3],["test",3],["args",3]]],[[]],null,null,[[],["joinhandle",3]],null,null,[[["python",3]],["pyresult",6]],[[["python",3]],[["pyobject",6],["pyresult",6]]],[[["python",3]],[["pyobject",6],["pyresult",6]]],null,null,[[],["pending",3]],null,null,null,null,null,null,null,[[["runtime",3]]],[[]],[[],["runtime",3]],[[]],[[]],[[]],[[["python",3]],["pyresult",6]],[[["python",3]],[["pyobject",6],["pyresult",6]]],[[["python",3]],[["pyobject",6],["pyresult",6]]],null,null,[[],["bool",15]],null,null,null,[[]],null,[[]],[[["python",3]],["pyresult",6]],[[["python",3]],[["pyobject",6],["pyresult",6]]],[[["python",3]],[["pyobject",6],["pyresult",6]]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyany",3]],[[["python",3]],["pyresult",6]],[[["python",3]],["pyresult",6]],[[["pyany",3]],["pyresult",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["handle",3]],[[],["test",3]],[[]],[[],["registry",3]],[[],[["error",3],["runtime",3],["result",4]]],[[],["handle",3]],[[],["joinhandle",3]],[[],["joinhandle",3]],[[]],[[],["enterguard",3]],[[["duration",3]]],[[]],[[],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[["usize",15]],["builder",3]],[[["usize",15]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[["usize",15]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],[["error",3],["runtime",3],["result",4]]],[[["duration",3]],["builder",3]],[[],["builder",3]],[[],["builder",3]],[[],["enterguard",3]],[[],["handle",3]],[[],[["result",4],["handle",3],["trycurrenterror",3]]],[[],["joinhandle",3]],[[],["joinhandle",3]],[[]]],"p":[[3,"Test"],[8,"JoinError"],[8,"Runtime"],[8,"SpawnLocalExt"],[3,"Args"],[3,"Runtime"],[3,"Builder"],[3,"EnterGuard"],[3,"Handle"]]}\
}');
initSearch(searchIndex);