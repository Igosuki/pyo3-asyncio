var searchIndex = JSON.parse('{\
"pyo3_asyncio":{"doc":"Rust Bindings to the Python Asyncio Event Loop","i":[[5,"with_runtime","pyo3_asyncio","Wraps the provided function with the initialization and…",null,[[["python",3]],["pyresult",6]]],[5,"get_event_loop","","Get a reference to the Python Event Loop from Rust",null,[[],["pyobject",6]]],[5,"run_forever","","Run the event loop forever",null,[[["python",3]],["pyresult",6]]],[5,"run_until_complete","","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"spawn","","Spawn a Future onto the executor",null,[[],["joinhandle",3]]],[5,"spawn_blocking","","Spawn a blocking task onto the executor",null,[[],["joinhandle",3]]],[5,"into_future","","Convert a Python coroutine into a Rust Future",null,[[["pyany",3],["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine",null,[[["python",3]],[["pyobject",6],["pyresult",6]]]],[0,"testing","","testing Utilities for writing PyO3 Asyncio tests",null,null],[3,"Args","pyo3_asyncio::testing","Args that should be provided to the test program",null,null],[3,"Test","","Wrapper around a test function or future to be passed to…",null,null],[5,"parse_args","","Parse the test args from the command line",null,[[],["args",3]]],[5,"test_harness","","Run a sequence of tests while applying any necessary…",null,[[["args",3]]]],[5,"test_main","","Default main function for the test harness.",null,[[]]],[11,"new_async","","Construct a test from a future",0,[[["string",3]]]],[11,"new_sync","","Construct a test from a blocking function (like the…",0,[[["string",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",1,[[]]]],"p":[[3,"Test"],[3,"Args"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);