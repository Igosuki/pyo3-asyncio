var searchIndex = JSON.parse('{\
"pyo3_asyncio":{"doc":"Rust Bindings to the Python Asyncio Event Loop","i":[[5,"with_runtime","pyo3_asyncio","Wraps the provided function with the initialization and…",null,[[["python",3]],["pyresult",6]]],[5,"get_event_loop","","Get a reference to the Python Event Loop from Rust",null,[[["python",3]],["pyany",3]]],[5,"run_forever","","Run the event loop forever",null,[[["python",3]],["pyresult",6]]],[5,"into_future","","Convert a Python `awaitable` into a Rust Future",null,[[["pyany",3]],["pyresult",6]]],[0,"testing","","testing Utilities for writing PyO3 Asyncio tests",null,null],[3,"Args","pyo3_asyncio::testing","Args that should be provided to the test program",null,null],[3,"Test","","The structure used by the `#[test]` macros to provide a…",null,null],[12,"name","","The fully qualified name of the test",0,null],[12,"test_fn","","The function used to create the task that runs the test.",0,null],[5,"parse_args","","Parse the test args from the command line",null,[[],["args",3]]],[5,"test_harness","","Run a sequence of tests while applying any necessary…",null,[[["test",3],["vec",3],["args",3]]]],[5,"main","","Parses test arguments and passes the tests to the…",null,[[]]],[11,"task","","Create the task that runs the test",0,[[],[["pin",3],["box",3]]]],[0,"async_std","pyo3_asyncio","async-std-runtime PyO3 Asyncio functions specific to the…",null,null],[23,"main","pyo3_asyncio::async_std","attributes Provides the boilerplate for the `async-std`…",null,null],[23,"test","","attributes testing Registers an `async-std` test with the…",null,null],[5,"run_until_complete","","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine",null,[[["python",3]],[["pyresult",6],["pyobject",6]]]],[0,"tokio","pyo3_asyncio","tokio-runtime PyO3 Asyncio functions specific to the tokio…",null,null],[23,"main","pyo3_asyncio::tokio","attributes",null,null],[23,"test","","attributes testing Registers a `tokio` test with the…",null,null],[5,"init","","Initialize the Tokio Runtime with a custom build",null,[[["runtime",3]]]],[5,"init_current_thread","","Initialize the Tokio Runtime with current-thread scheduler",null,[[]]],[5,"get_runtime","","Get a reference to the current tokio runtime",null,[[],["runtime",3]]],[5,"init_multi_thread","","Initialize the Tokio Runtime with the multi-thread scheduler",null,[[]]],[5,"run_until_complete","","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine",null,[[["python",3]],[["pyresult",6],["pyobject",6]]]],[0,"generic","pyo3_asyncio","Generic implementations of PyO3 Asyncio utilities that can…",null,null],[5,"run_until_complete","pyo3_asyncio::generic","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine with a…",null,[[["python",3]],[["pyresult",6],["pyobject",6]]]],[8,"JoinError","","Generic utilities for a JoinError",null,null],[10,"is_panic","","Check if the spawned task exited because of a panic",1,[[]]],[8,"Runtime","","Generic Rust async/await runtime",null,null],[16,"JoinError","","The error returned by a JoinHandle after being awaited",2,null],[16,"JoinHandle","","A future that completes with the result of the spawned task",2,null],[10,"spawn","","Spawn a future onto this runtime\'s event loop",2,[[]]],[11,"from","pyo3_asyncio::testing","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["test",3]]],[11,"default","","",3,[[]]],[11,"registry","","",0,[[],["registry",3]]]],"p":[[3,"Test"],[8,"JoinError"],[8,"Runtime"],[3,"Args"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);