var searchIndex = JSON.parse('{\
"pyo3_asyncio":{"doc":"Rust Bindings to the Python Asyncio Event Loop","i":[[5,"with_runtime","pyo3_asyncio","Wraps the provided function with the initialization and…",null,[[["python",3]],["pyresult",6]]],[5,"get_event_loop","","Get a reference to the Python Event Loop from Rust",null,[[["python",3]],["pyany",3]]],[5,"run_forever","","Run the event loop forever",null,[[["python",3]],["pyresult",6]]],[5,"into_future","","Convert a Python `awaitable` into a Rust Future",null,[[["pyany",3]],["pyresult",6]]],[0,"testing","","testing Utilities for writing PyO3 Asyncio tests",null,null],[3,"Args","pyo3_asyncio::testing","Args that should be provided to the test program",null,null],[3,"Test","","The structure used by the `#[test]` macros to provide a…",null,null],[12,"name","","The fully qualified name of the test",0,null],[12,"test_fn","","The function used to create the task that runs the test.",0,null],[5,"parse_args","","Parse the test args from the command line",null,[[],["args",3]]],[5,"test_harness","","Run a sequence of tests while applying any necessary…",null,[[["vec",3],["test",3],["args",3]]]],[5,"main","","Parses test arguments and passes the tests to the…",null,[[]]],[11,"task","","Create the task that runs the test",0,[[],[["pin",3],["box",3]]]],[0,"async_std","pyo3_asyncio","async-std-runtime PyO3 Asyncio functions specific to the…",null,null],[23,"main","pyo3_asyncio::async_std","attributes Provides the boilerplate for the `async-std`…",null,null],[23,"test","","attributes testing Registers an `async-std` test with the…",null,null],[5,"run_until_complete","","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine",null,[[["python",3]],[["pyresult",6],["pyobject",6]]]],[0,"re_exports","","attributes re-exports for macros",null,null],[5,"spawn_blocking","pyo3_asyncio::async_std::re_exports","re-export spawn_blocking for use in `#[test]` macro…",null,[[],["joinhandle",3]]],[0,"tokio","pyo3_asyncio","tokio-runtime PyO3 Asyncio functions specific to the tokio…",null,null],[23,"main","pyo3_asyncio::tokio","attributes",null,null],[23,"test","","attributes testing Registers a `tokio` test with the…",null,null],[5,"init","","Initialize the Tokio Runtime with a custom build",null,[[["runtime",3]]]],[5,"init_current_thread","","Initialize the Tokio Runtime with current-thread scheduler",null,[[]]],[5,"get_runtime","","Get a reference to the current tokio runtime",null,[[],["runtime",3]]],[5,"init_multi_thread","","Initialize the Tokio Runtime with the multi-thread scheduler",null,[[]]],[5,"run_until_complete","","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine",null,[[["python",3]],[["pyresult",6],["pyobject",6]]]],[0,"re_exports","","attributes re-exports for macros",null,null],[5,"pending","pyo3_asyncio::tokio::re_exports","re-export pending to be used in tokio macros without…",null,[[],["pending",3]]],[0,"runtime","","re-export tokio::runtime to build runtimes in tokio macros…",null,null],[3,"Runtime","pyo3_asyncio::tokio::re_exports::runtime","The Tokio runtime.",null,null],[3,"Builder","","Builds Tokio Runtime with custom configuration values.",null,null],[3,"EnterGuard","","Runtime context guard.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[0,"generic","pyo3_asyncio","Generic implementations of PyO3 Asyncio utilities that can…",null,null],[5,"run_until_complete","pyo3_asyncio::generic","Run the event loop until the given Future completes",null,[[["python",3]],["pyresult",6]]],[5,"into_coroutine","","Convert a Rust Future into a Python coroutine with a…",null,[[["python",3]],[["pyresult",6],["pyobject",6]]]],[8,"JoinError","","Generic utilities for a JoinError",null,null],[10,"is_panic","","Check if the spawned task exited because of a panic",1,[[]]],[8,"Runtime","","Generic Rust async/await runtime",null,null],[16,"JoinError","","The error returned by a JoinHandle after being awaited",2,null],[16,"JoinHandle","","A future that completes with the result of the spawned task",2,null],[10,"spawn","","Spawn a future onto this runtime\'s event loop",2,[[]]],[11,"from","pyo3_asyncio::testing","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","pyo3_asyncio::tokio::re_exports::runtime","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",7,[[],["handle",3]]],[11,"clone","pyo3_asyncio::testing","",0,[[],["test",3]]],[11,"default","","",3,[[]]],[11,"registry","","",0,[[],["registry",3]]],[11,"new","pyo3_asyncio::tokio::re_exports::runtime","Create a new runtime instance with default configuration…",4,[[],[["runtime",3],["error",3],["result",4]]]],[11,"handle","","Return a handle to the runtime\'s spawner.",4,[[],["handle",3]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",4,[[],["joinhandle",3]]],[11,"spawn_blocking","","Run the provided function on an executor dedicated to…",4,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is…",4,[[]]],[11,"enter","","Enter the runtime context.",4,[[],["enterguard",3]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most `duration` for…",4,[[["duration",3]]]],[11,"shutdown_background","","Shutdown the runtime, without waiting for any spawned…",4,[[]]],[11,"new_current_thread","","Returns a new builder with the current thread scheduler…",5,[[],["builder",3]]],[11,"new_multi_thread","","Returns a new builder with the multi thread scheduler…",5,[[],["builder",3]]],[11,"enable_all","","Enables both I/O and time drivers.",5,[[],["builder",3]]],[11,"worker_threads","","Sets the number of worker threads the `Runtime` will use.",5,[[],["builder",3]]],[11,"max_blocking_threads","","Specifies limit for threads spawned by the Runtime used…",5,[[],["builder",3]]],[11,"thread_name","","Sets name of threads spawned by the `Runtime`\'s thread pool.",5,[[],["builder",3]]],[11,"thread_name_fn","","Sets a function used to generate the name of threads…",5,[[],["builder",3]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",5,[[],["builder",3]]],[11,"on_thread_start","","Executes function `f` after each thread is started but…",5,[[],["builder",3]]],[11,"on_thread_stop","","Executes function `f` before each thread stops.",5,[[],["builder",3]]],[11,"build","","Creates the configured `Runtime`.",5,[[],[["runtime",3],["error",3],["result",4]]]],[11,"thread_keep_alive","","Sets a custom timeout for a thread in the blocking pool.",5,[[["duration",3]],["builder",3]]],[11,"enable_io","","Enables the I/O driver.",5,[[],["builder",3]]],[11,"enable_time","","Enables the time driver.",5,[[],["builder",3]]],[11,"enter","","Enter the runtime context. This allows you to construct…",7,[[],["enterguard",3]]],[11,"current","","Returns a `Handle` view over the currently running `Runtime`",7,[[],["handle",3]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",7,[[],[["trycurrenterror",3],["result",4],["handle",3]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",7,[[],["joinhandle",3]]],[11,"spawn_blocking","","Run the provided function on an executor dedicated to…",7,[[],["joinhandle",3]]]],"p":[[3,"Test"],[8,"JoinError"],[8,"Runtime"],[3,"Args"],[3,"Runtime"],[3,"Builder"],[3,"EnterGuard"],[3,"Handle"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);